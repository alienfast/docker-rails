verbose: true

development:
  docker-compose:
    web:
      command: >
        bash -c "
        echo 'Bundling gems'
        && bundle install --jobs 4 --retry 3

        && echo 'Generating Spring binstubs'
        && bundle exec spring binstub --all

        && echo 'Clearing logs and tmp dirs'
        && bin/rake log:clear tmp:clear

        && echo 'Check and wait for database connection'
        && bundle exec docker-rails-db-check

        && echo 'DB rebuild'
        && bin/rake db:rebuild

        && echo "Starting app server"
        && bundle exec rails s -p 3000

        && echo 'Setup and start foreman'
        && gem install foreman
        && foreman start
        "

test:
  extract: ['target', 'foo-not-sure-yet']
  docker-compose:
    web:
      command: >
        bash -c "
        echo 'Bundling gems'
        && bundle install --jobs 4 --retry 3

        && echo 'Generating Spring binstubs'
        && bundle exec spring binstub --all

        && echo 'Clearing logs and tmp dirs'
        && bin/rake log:clear tmp:clear

        && echo 'Check and wait for database connection'
        && bundle exec docker-rails-db-check

        && echo 'DB rebuild'
        && bin/rake db:rebuild

        && echo 'Tests'
        && RAILS_ENV=test xvfb run -a bundle exec rake spec cucumber
        "

parallel_tests:
  extract: ['target', 'foo-not-sure-yet']
  docker-compose:
    web:
      command: >
        bash -c "
        echo 'Bundling gems'
        && bundle install --jobs 4 --retry 3

        && echo 'Generating Spring binstubs'
        && bundle exec spring binstub --all

        && echo 'Clearing logs and tmp dirs'
        && bin/rake log:clear tmp:clear

        && echo 'Check and wait for database connection'
        && bundle exec docker-rails-db-check

        && echo 'DB rebuild'
        && bin/rake db:rebuild

        && echo 'Tests'
        && RAILS_ENV=test xvfb run -a bundle exec rake parallel:spec parallel:features
        "

docker-compose:
  web:
    build: .
    working_dir: /project/spec/dummy
    ports:
      - "3000:3000"

    volumes:
      - .:/project

    links:
      - db
      - elasticsearch

    volumes_from:
      # Mount the gems data volume container for cached bundler gem files
      - #{GEMS_VOLUME_NAME}

    # https://docs.docker.com/v1.6/docker-compose/cli/#environment-variables
    environment:
      # Tell bundler where to get the files
      - GEM_HOME=#{GEMS_VOLUME_PATH}

  elasticsearch:
    image: library/elasticsearch:1.7
    ports:
      - "9200:9200"

  db:
    # https://github.com/docker-library/docs/tree/master/mysql
    image: library/mysql:5.7.6
    ports:
      - "3306:3306"

    # https://github.com/docker-library/docs/tree/master/mysql#environment-variables
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=true